version: '3.8'

services:
  influxdb:
    image: influxdb:2
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME_FILE=/run/secrets/influxdb-admin-username
      - DOCKER_INFLUXDB_INIT_PASSWORD_FILE=/run/secrets/influxdb-admin-password
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE=/run/secrets/influxdb-admin-token
      - DOCKER_INFLUXDB_INIT_ORG=network-monitoring
      - DOCKER_INFLUXDB_INIT_BUCKET=network-data
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
      - influxdb-admin-token

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
      - POSTGRES_DB=network_monitor_central
    ports:
      - "5432:5432"
    secrets:
      - postgres-user
      - postgres-password

  flask_app:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./flask_app:/app
    ports:
      - "5000:5000"
    depends_on:
      - influxdb
      - postgres
    command: ["sh", "-c", "python3 -c 'from app.database import init_db; init_db()' && python3 app/main.py"]

volumes:
  influxdb-data:
  influxdb-config:
  postgres-data:

secrets:
  influxdb-admin-username:
    file: ./secrets/influxdb-admin-username.txt
  influxdb-admin-password:
    file: ./secrets/influxdb-admin-password.txt
  influxdb-admin-token:
    file: ./secrets/influxdb-admin-token.txt
  postgres-user:
    file: ./secrets/postgres-user.txt
  postgres-password:
    file: ./secrets/postgres-password.txt
